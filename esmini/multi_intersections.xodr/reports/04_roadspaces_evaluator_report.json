{
    "parameters": {
        "numberTolerance": 1.0E-7,
        "laneTransitionDistanceTolerance": 0.001
    },
    "modelingRulesEvaluation": [
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 0.09999999999999999 successor: true).",
            "location": "from LaneIdentifier(laneId=3, laneSectionId=0, roadId=227) to LaneIdentifier(laneId=3, laneSectionId=0, roadId=281)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 0.09999999999999999, successor: true).",
            "location": "from LaneIdentifier(laneId=-3, laneSectionId=0, roadId=227) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=281)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 0.1 successor: true).",
            "location": "from LaneIdentifier(laneId=3, laneSectionId=0, roadId=229) to LaneIdentifier(laneId=3, laneSectionId=0, roadId=284)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 0.1, successor: true).",
            "location": "from LaneIdentifier(laneId=-3, laneSectionId=0, roadId=229) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=284)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 0.1 successor: true).",
            "location": "from LaneIdentifier(laneId=3, laneSectionId=0, roadId=230) to LaneIdentifier(laneId=3, laneSectionId=0, roadId=283)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 0.1, successor: true).",
            "location": "from LaneIdentifier(laneId=-3, laneSectionId=0, roadId=230) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=283)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 0.09999999999999999 successor: true).",
            "location": "from LaneIdentifier(laneId=3, laneSectionId=0, roadId=266) to LaneIdentifier(laneId=3, laneSectionId=0, roadId=267)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 0.09999999999999999, successor: true).",
            "location": "from LaneIdentifier(laneId=-3, laneSectionId=0, roadId=266) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=267)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        }
    ]
}