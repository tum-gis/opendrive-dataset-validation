{
    "parameters": {
        "numberTolerance": 1.0E-7,
        "laneTransitionDistanceTolerance": 0.001
    },
    "modelingRulesEvaluation": [
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104, successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=22) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104 successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=22) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104, successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=34) to LaneIdentifier(laneId=-1, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104 successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=34) to LaneIdentifier(laneId=-1, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104, successor: true).",
            "location": "from LaneIdentifier(laneId=2, laneSectionId=0, roadId=61) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104 successor: true).",
            "location": "from LaneIdentifier(laneId=2, laneSectionId=0, roadId=61) to LaneIdentifier(laneId=-3, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Left boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104, successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=61) to LaneIdentifier(laneId=-2, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        },
        {
            "type": "",
            "info": "Right boundary of lane should be connected to its successive lane (euclidean distance: 50.12235030403104 successor: true).",
            "location": "from LaneIdentifier(laneId=1, laneSectionId=0, roadId=61) to LaneIdentifier(laneId=-2, laneSectionId=0, roadId=3)",
            "incidentSeverity": "WARNING",
            "wasHealed": false,
            "messageSeverity": "WARNING"
        }
    ]
}